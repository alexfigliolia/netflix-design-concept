/* tslint:disable */
/* eslint-disable */
/**
 * TMDB API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MovieKeywords200ResponseKeywordsInner } from './MovieKeywords200ResponseKeywordsInner';
import {
    MovieKeywords200ResponseKeywordsInnerFromJSON,
    MovieKeywords200ResponseKeywordsInnerFromJSONTyped,
    MovieKeywords200ResponseKeywordsInnerToJSON,
    MovieKeywords200ResponseKeywordsInnerToJSONTyped,
} from './MovieKeywords200ResponseKeywordsInner';

/**
 * 
 * @export
 * @interface TvSeriesKeywords200Response
 */
export interface TvSeriesKeywords200Response {
    /**
     * 
     * @type {number}
     * @memberof TvSeriesKeywords200Response
     */
    id?: number;
    /**
     * 
     * @type {Array<MovieKeywords200ResponseKeywordsInner>}
     * @memberof TvSeriesKeywords200Response
     */
    results?: Array<MovieKeywords200ResponseKeywordsInner>;
}

/**
 * Check if a given object implements the TvSeriesKeywords200Response interface.
 */
export function instanceOfTvSeriesKeywords200Response(value: object): value is TvSeriesKeywords200Response {
    return true;
}

export function TvSeriesKeywords200ResponseFromJSON(json: any): TvSeriesKeywords200Response {
    return TvSeriesKeywords200ResponseFromJSONTyped(json, false);
}

export function TvSeriesKeywords200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TvSeriesKeywords200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'results': json['results'] == null ? undefined : ((json['results'] as Array<any>).map(MovieKeywords200ResponseKeywordsInnerFromJSON)),
    };
}

export function TvSeriesKeywords200ResponseToJSON(json: any): TvSeriesKeywords200Response {
    return TvSeriesKeywords200ResponseToJSONTyped(json, false);
}

export function TvSeriesKeywords200ResponseToJSONTyped(value?: TvSeriesKeywords200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'results': value['results'] == null ? undefined : ((value['results'] as Array<any>).map(MovieKeywords200ResponseKeywordsInnerToJSON)),
    };
}

