/* tslint:disable */
/* eslint-disable */
/**
 * TMDB API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AlternativeNamesCopy200ResponseLogosInner } from './AlternativeNamesCopy200ResponseLogosInner';
import {
    AlternativeNamesCopy200ResponseLogosInnerFromJSON,
    AlternativeNamesCopy200ResponseLogosInnerFromJSONTyped,
    AlternativeNamesCopy200ResponseLogosInnerToJSON,
    AlternativeNamesCopy200ResponseLogosInnerToJSONTyped,
} from './AlternativeNamesCopy200ResponseLogosInner';

/**
 * 
 * @export
 * @interface AlternativeNamesCopy200Response
 */
export interface AlternativeNamesCopy200Response {
    /**
     * 
     * @type {number}
     * @memberof AlternativeNamesCopy200Response
     */
    id?: number;
    /**
     * 
     * @type {Array<AlternativeNamesCopy200ResponseLogosInner>}
     * @memberof AlternativeNamesCopy200Response
     */
    logos?: Array<AlternativeNamesCopy200ResponseLogosInner>;
}

/**
 * Check if a given object implements the AlternativeNamesCopy200Response interface.
 */
export function instanceOfAlternativeNamesCopy200Response(value: object): value is AlternativeNamesCopy200Response {
    return true;
}

export function AlternativeNamesCopy200ResponseFromJSON(json: any): AlternativeNamesCopy200Response {
    return AlternativeNamesCopy200ResponseFromJSONTyped(json, false);
}

export function AlternativeNamesCopy200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlternativeNamesCopy200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'logos': json['logos'] == null ? undefined : ((json['logos'] as Array<any>).map(AlternativeNamesCopy200ResponseLogosInnerFromJSON)),
    };
}

export function AlternativeNamesCopy200ResponseToJSON(json: any): AlternativeNamesCopy200Response {
    return AlternativeNamesCopy200ResponseToJSONTyped(json, false);
}

export function AlternativeNamesCopy200ResponseToJSONTyped(value?: AlternativeNamesCopy200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'logos': value['logos'] == null ? undefined : ((value['logos'] as Array<any>).map(AlternativeNamesCopy200ResponseLogosInnerToJSON)),
    };
}

